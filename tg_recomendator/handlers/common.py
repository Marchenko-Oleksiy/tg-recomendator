from aiogram import types, Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from utils import db
from keyboards import main_menu_keyboard
from utils.constants import *

# –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –∫–æ–º–∞–Ω–¥
common_router = Router()

@common_router.message(Command(commands=[START_COMMAND]))
async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    # –°–∫–∏–¥–∞—î–º–æ –±—É–¥—å-—è–∫–∏–π –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω
    await state.clear()
    
    # –î–æ–¥–∞—î–º–æ –∞–±–æ –æ–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user = message.from_user
    db.add_user(user.id, user.username, user.first_name, user.last_name)
    
    welcome_text = (
        f"üëã –í—ñ—Ç–∞—é, {user.first_name}!\n\n"
        f"–Ø –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –∑–Ω–∞–π—Ç–∏ —Ñ—ñ–ª—å–º–∏, —Å–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –º—É–ª—å—Ç—Å–µ—Ä—ñ–∞–ª–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É.\n\n"
        f"–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó."
    )
    await message.answer(welcome_text, reply_markup=main_menu_keyboard())

@common_router.message(Command(commands=[HELP_COMMAND]))
@common_router.message(F.text == "‚ùì –î–æ–ø–æ–º–æ–≥–∞")
async def cmd_help(message: types.Message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help"""
    help_text = (
        "üîç <b>–Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º:</b>\n\n"
        "‚Ä¢ <b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó</b> - –ø–µ—Ä–µ–≥–ª—è–¥ —Ñ—ñ–ª—å–º—ñ–≤/—Å–µ—Ä—ñ–∞–ª—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ —Ç–∞ –∂–∞–Ω—Ä–∞–º–∏\n"
        "‚Ä¢ <b>–ü–æ—à—É–∫</b> - –ø–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é\n"
        "‚Ä¢ <b>–ü–æ–ø—É–ª—è—Ä–Ω–µ</b> - –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤ —Ç–∞ —Å–µ—Ä—ñ–∞–ª—ñ–≤\n\n"
        "üìù <b>–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:</b>\n"
        "/start - –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/help - –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É\n"
        "/categories - –ø–µ—Ä–µ–≥–ª—è–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π\n"
        "/trending - –ø–æ–ø—É–ª—è—Ä–Ω—ñ —Ñ—ñ–ª—å–º–∏ —ñ —Å–µ—Ä—ñ–∞–ª–∏\n"
        "/search - –ø–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é\n"
    )
    await message.answer(help_text, parse_mode="HTML")

@common_router.message(F.text == "üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é")
async def process_back_to_menu(message: types.Message, state: FSMContext):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await state.clear()
    await message.answer("–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é", reply_markup=main_menu_keyboard())

def register_common_handlers(dp):
    """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∑–∞–≥–∞–ª—å–Ω–∏—Ö –∫–æ–º–∞–Ω–¥"""
    dp.include_router(common_router) 